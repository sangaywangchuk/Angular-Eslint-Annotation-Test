[{"filePath":"/Users/sangaywangchuk/Documents/selise/eslint-annotation/src/app/app-routing.module.ts","messages":[{"ruleId":"sort-imports","severity":2,"message":"Expected 'multiple' syntax before 'single' syntax.","line":2,"column":1,"nodeType":"ImportDeclaration","messageId":"unexpectedSyntaxOrder","endLine":2,"endColumn":56},{"ruleId":"prettier/prettier","severity":2,"message":"Delete `·`","line":10,"column":32,"nodeType":null,"messageId":"delete","endLine":10,"endColumn":33,"fix":{"range":[242,243],"text":""}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","usedDeprecatedRules":[]},{"filePath":"/Users/sangaywangchuk/Documents/selise/eslint-annotation/src/app/app.component.spec.ts","messages":[{"ruleId":"sort-imports","severity":2,"message":"Imports should be sorted alphabetically.","line":2,"column":1,"nodeType":"ImportDeclaration","messageId":"sortImportsAlphabetically","endLine":2,"endColumn":63},{"ruleId":"sort-imports","severity":2,"message":"Imports should be sorted alphabetically.","line":3,"column":1,"nodeType":"ImportDeclaration","messageId":"sortImportsAlphabetically","endLine":3,"endColumn":48},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `⏎········RouterTestingModule⏎······` with `RouterTestingModule`","line":8,"column":17,"nodeType":null,"messageId":"replace","endLine":10,"endColumn":7,"fix":{"range":[280,315],"text":"RouterTestingModule"}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `⏎········AppComponent⏎······],` with `AppComponent]`","line":11,"column":22,"nodeType":null,"messageId":"replace","endLine":13,"endColumn":9,"fix":{"range":[339,369],"text":"AppComponent]"}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `'eslint-annotation·app·is·running!'` with `⏎······'eslint-annotation·app·is·running!'⏎····`","line":33,"column":76,"nodeType":null,"messageId":"replace","endLine":33,"endColumn":111,"fix":{"range":[1058,1093],"text":"\n      'eslint-annotation app is running!'\n    "}}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import { TestBed } from '@angular/core/testing';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { AppComponent } from './app.component';\n\ndescribe('AppComponent', () => {\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [\n        RouterTestingModule\n      ],\n      declarations: [\n        AppComponent\n      ],\n    }).compileComponents();\n  });\n\n  it('should create the app', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.componentInstance;\n    expect(app).toBeTruthy();\n  });\n\n  it(`should have as title 'eslint-annotation'`, () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.componentInstance;\n    expect(app.title).toEqual('eslint-annotation');\n  });\n\n  it('should render title', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    fixture.detectChanges();\n    const compiled = fixture.nativeElement as HTMLElement;\n    expect(compiled.querySelector('.content span')?.textContent).toContain('eslint-annotation app is running!');\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/sangaywangchuk/Documents/selise/eslint-annotation/src/app/app.component.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `;`","line":11,"column":23,"nodeType":null,"messageId":"insert","endLine":11,"endColumn":23,"fix":{"range":[253,253],"text":";"}}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'eslint-annotation';\n\n  time() {\n    title = 'sadfasdf'\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sangaywangchuk/Documents/selise/eslint-annotation/src/app/app.module.ts","messages":[{"ruleId":"sort-imports","severity":2,"message":"Imports should be sorted alphabetically.","line":2,"column":1,"nodeType":"ImportDeclaration","messageId":"sortImportsAlphabetically","endLine":2,"endColumn":59},{"ruleId":"sort-imports","severity":2,"message":"Imports should be sorted alphabetically.","line":4,"column":1,"nodeType":"ImportDeclaration","messageId":"sortImportsAlphabetically","endLine":4,"endColumn":57},{"ruleId":"sort-imports","severity":2,"message":"Imports should be sorted alphabetically.","line":5,"column":1,"nodeType":"ImportDeclaration","messageId":"sortImportsAlphabetically","endLine":5,"endColumn":48},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `⏎····AppComponent,⏎····EslintComponent⏎··` with `AppComponent,·EslintComponent`","line":9,"column":18,"nodeType":null,"messageId":"replace","endLine":12,"endColumn":3,"fix":{"range":[298,339],"text":"AppComponent, EslintComponent"}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `⏎····BrowserModule,⏎····AppRoutingModule⏎··` with `BrowserModule,·AppRoutingModule`","line":13,"column":13,"nodeType":null,"messageId":"replace","endLine":16,"endColumn":3,"fix":{"range":[354,397],"text":"BrowserModule, AppRoutingModule"}},{"ruleId":"prettier/prettier","severity":2,"message":"Delete `·`","line":20,"column":25,"nodeType":null,"messageId":"delete","endLine":20,"endColumn":26,"fix":{"range":[472,473],"text":""}}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EslintComponent } from './eslint/eslint.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EslintComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","usedDeprecatedRules":[]},{"filePath":"/Users/sangaywangchuk/Documents/selise/eslint-annotation/src/app/eslint/eslint.component.spec.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Replace `·EslintComponent·` with `EslintComponent`","line":11,"column":22,"nodeType":null,"messageId":"replace","endLine":11,"endColumn":39,"fix":{"range":[335,352],"text":"EslintComponent"}},{"ruleId":"prettier/prettier","severity":2,"message":"Delete `⏎····`","line":12,"column":7,"nodeType":null,"messageId":"delete","endLine":13,"endColumn":5,"fix":{"range":[360,365],"text":""}}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { EslintComponent } from './eslint.component';\n\ndescribe('EslintComponent', () => {\n  let component: EslintComponent;\n  let fixture: ComponentFixture<EslintComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [ EslintComponent ]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(EslintComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/sangaywangchuk/Documents/selise/eslint-annotation/src/app/eslint/eslint.component.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Delete `⏎`","line":5,"column":1,"nodeType":null,"messageId":"delete","endLine":6,"endColumn":1,"fix":{"range":[145,146],"text":""}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `⏎··constructor()·{}⏎` with `··constructor()·{}`","line":12,"column":1,"nodeType":null,"messageId":"replace","endLine":14,"endColumn":1,"fix":{"range":[320,340],"text":"  constructor() {}"}},{"ruleId":"@typescript-eslint/no-empty-function","severity":2,"message":"Unexpected empty constructor.","line":13,"column":17,"nodeType":"FunctionExpression","messageId":"unexpected","endLine":13,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import { Component, OnInit } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { lksdlkew } from '@angular/core';\n\n\n@Component({\n  selector: 'app-eslint',\n  templateUrl: './eslint.component.html',\n  styleUrls: ['./eslint.component.scss']\n})\nexport class EslintComponent implements OnInit {\n\n  constructor() {}\n\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/sangaywangchuk/Documents/selise/eslint-annotation/src/main.ts","messages":[{"ruleId":"sort-imports","severity":2,"message":"Imports should be sorted alphabetically.","line":3,"column":1,"nodeType":"ImportDeclaration","messageId":"sortImportsAlphabetically","endLine":3,"endColumn":46},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `⏎platformBrowserDynamic()` with `platformBrowserDynamic()⏎··`","line":5,"column":1,"nodeType":null,"messageId":"replace","endLine":6,"endColumn":25,"fix":{"range":[124,149],"text":"platformBrowserDynamic()\n  "}},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `err` with `(err)`","line":7,"column":10,"nodeType":null,"messageId":"replace","endLine":7,"endColumn":13,"fix":{"range":[186,189],"text":"(err)"}}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","usedDeprecatedRules":[]}]